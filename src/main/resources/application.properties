# data source
spring.datasource.url=${MYSQL_URL:jdbc:mysql://localhost/proposta}
spring.datasource.username=root
spring.datasource.password=mysql


# JPA Config
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true

# Health Cehck - Spring Actuator
management.endpoint.health.show-details = always 
management.health.probes.enabled = true;


# Metricas com Prometheus
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true

# Adicionando o Label Apicacao e Ambiente na métrica proposta_criada_total
proposta_criada_total{aplicacao="servico de proposta", ambiente="desenvolvimento"}
management.metrics.tags.aplicacao=servico de proposta
management.metrics.tags.ambiente=desenvolvimento

# Feign Config:
financeiro.host=${ANALISE_URL:http://localhost:9999}
cartoes.host=${CONTAS_URL:http://localhost:8888}

# Nas cfg de timeout não esqueça de nomear qual Bean terá o tempo - A combinação a seguir levará a uma espera máxima de 200 milisegundos
# Agora toda comunicação feita através do Feign, para aquele bean específico, o tempo máximo de espera da resposta vai ser de 100 milisegundos.
feign.client.config.sistemaDeDadosFinanceirosClient.read-timeout=100
# Tempo máximo para conseguir realizar a conexão com o outro sistema:
feign.client.config.sistemaDeDadosFinanceirosClient.connect-timeout=100

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}

# Jaeger Config:

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name:Proposta}
# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}
#Corrige a falha: Triggering deferred initialization of Spring Data repositories
opentracing.spring.cloud.jdbc.enabled=false

# Variaveis para criptografar o documento de uma proposta.
# Em um projeto real essas variáveis não ficariam aqui!
criptografia.documento.chave=${senha123}
criptografia.documento.salt=${5c0744940b5c369c}